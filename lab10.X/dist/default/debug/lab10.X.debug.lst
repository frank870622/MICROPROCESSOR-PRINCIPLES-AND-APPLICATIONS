

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Dec 10 19:13:05 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_adc_init
   384                           	FNCALL	_main,_ccp2_init
   385                           	FNCALL	_main,_tmr_init
   386                           	FNROOT	_main
   387                           	FNCALL	intlevel2,_Hi_ISR
   388                           	global	intlevel2
   389                           	FNROOT	intlevel2
   390                           	global	_result
   391                           	global	_count
   392                           	global	_TRISEbits
   393                           _TRISEbits	set	0xF96
   394  0000                     	global	_CCPR2
   395                           _CCPR2	set	0xFBB
   396  0000                     	global	_TMR3
   397                           _TMR3	set	0xFB2
   398  0000                     	global	_ADRES
   399                           _ADRES	set	0xFC3
   400  0000                     	global	_T3CONbits
   401                           _T3CONbits	set	0xFB1
   402  0000                     	global	_IPR2bits
   403                           _IPR2bits	set	0xFA2
   404  0000                     	global	_PIE2bits
   405                           _PIE2bits	set	0xFA0
   406  0000                     	global	_CCP2CONbits
   407                           _CCP2CONbits	set	0xFBA
   408  0000                     	global	_RCONbits
   409                           _RCONbits	set	0xFD0
   410  0000                     	global	_IPR1bits
   411                           _IPR1bits	set	0xF9F
   412  0000                     	global	_PIE1bits
   413                           _PIE1bits	set	0xF9D
   414  0000                     	global	_ADCON2bits
   415                           _ADCON2bits	set	0xFC0
   416  0000                     	global	_ADCON1bits
   417                           _ADCON1bits	set	0xFC1
   418  0000                     	global	_ADCON0bits
   419                           _ADCON0bits	set	0xFC2
   420  0000                     	global	_OSCCONbits
   421                           _OSCCONbits	set	0xFD3
   422  0000                     	global	_PIR2bits
   423                           _PIR2bits	set	0xFA1
   424  0000                     	global	_PIR1bits
   425                           _PIR1bits	set	0xF9E
   426  0000                     	global	_INTCONbits
   427                           _INTCONbits	set	0xFF2
   428  0000                     ; #config settings
   429                           global __CFG_OSC$INTIO67
   430                           __CFG_OSC$INTIO67 equ 0x0
   431  0000                     global __CFG_WDT$OFF
   432                           __CFG_WDT$OFF equ 0x0
   433  0000                     global __CFG_LVP$OFF
   434                           __CFG_LVP$OFF equ 0x0
   435  0000                     	file	"C:\Users\user\AppData\Local\Temp\s4u0."
   436                           	line	#
   437                           psect	cinit,class=CODE,delta=1,reloc=2
   438                           global __pcinit
   439                           __pcinit:
   440  000110                     global start_initialization
   441                           start_initialization:
   442  000110                     
   443                           global __initialization
   444                           __initialization:
   445  000110                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   446                           global __pbssCOMRAM
   447                           __pbssCOMRAM:
   448  000001                     	global	_result
   449                           _result:
   450  000001                            ds      16
   451  000001                     	global	_count
   452                           _count:
   453  000011                            ds      2
   454  000011                     	file	"C:\Users\user\AppData\Local\Temp\s4u0."
   455                           	line	#
   456                           psect	cinit
   457                           ; Clear objects allocated to COMRAM (18 bytes)
   458                           	global __pbssCOMRAM
   459                           lfsr	0,__pbssCOMRAM
   460  000110  EE00  F001         movlw	18
   461  000114  0E12               clear_0:
   462  000116                     clrf	postinc0,c
   463  000116  6AEE               decf	wreg
   464  000118  06E8               bnz	clear_0
   465  00011A  E1FD               psect cinit,class=CODE,delta=1
   466                           global end_of_initialization,__end_of__initialization
   467                           
   468                           ;End of C runtime variable initialization code
   469                           
   470                           end_of_initialization:
   471  00011C                     __end_of__initialization:
   472  00011C                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   473  00011C  9015               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   474  00011E  9215               movlb 0
   475  000120  0100               goto _main	;jump to C main() function
   476  000122  EF6E  F000         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   477                           global __pcstackCOMRAM
   478                           __pcstackCOMRAM:
   479  000013                     ?_adc_init:	; 1 bytes @ 0x0
   480  000013                     ?_ccp2_init:	; 1 bytes @ 0x0
   481  000013                     ?_tmr_init:	; 1 bytes @ 0x0
   482  000013                     ?_Hi_ISR:	; 1 bytes @ 0x0
   483  000013                     ??_Hi_ISR:	; 1 bytes @ 0x0
   484  000013                     ?_main:	; 1 bytes @ 0x0
   485  000013                     	ds   2
   486  000013                     ??_adc_init:	; 1 bytes @ 0x2
   487  000015                     ??_ccp2_init:	; 1 bytes @ 0x2
   488  000015                     ??_tmr_init:	; 1 bytes @ 0x2
   489  000015                     ??_main:	; 1 bytes @ 0x2
   490  000015                     ;!
   491                           ;!Data Sizes:
   492                           ;!    Strings     0
   493                           ;!    Constant    0
   494                           ;!    Data        0
   495                           ;!    BSS         18
   496                           ;!    Persistent  0
   497                           ;!    Stack       0
   498                           ;!
   499                           ;!Auto Spaces:
   500                           ;!    Space          Size  Autos    Used
   501                           ;!    COMRAM          126      2      20
   502                           ;!    BANK0           128      0       0
   503                           ;!    BANK1           256      0       0
   504                           ;!    BANK2           256      0       0
   505                           ;!    BANK3           256      0       0
   506                           ;!    BANK4           256      0       0
   507                           ;!    BANK5           244      0       0
   508                           
   509                           ;!
   510                           ;!Pointer List with Targets:
   511                           ;!
   512                           ;!    None.
   513                           
   514                           
   515                           ;!
   516                           ;!Critical Paths under _main in COMRAM
   517                           ;!
   518                           ;!    None.
   519                           ;!
   520                           ;!Critical Paths under _Hi_ISR in COMRAM
   521                           ;!
   522                           ;!    None.
   523                           ;!
   524                           ;!Critical Paths under _main in BANK0
   525                           ;!
   526                           ;!    None.
   527                           ;!
   528                           ;!Critical Paths under _Hi_ISR in BANK0
   529                           ;!
   530                           ;!    None.
   531                           ;!
   532                           ;!Critical Paths under _main in BANK1
   533                           ;!
   534                           ;!    None.
   535                           ;!
   536                           ;!Critical Paths under _Hi_ISR in BANK1
   537                           ;!
   538                           ;!    None.
   539                           ;!
   540                           ;!Critical Paths under _main in BANK2
   541                           ;!
   542                           ;!    None.
   543                           ;!
   544                           ;!Critical Paths under _Hi_ISR in BANK2
   545                           ;!
   546                           ;!    None.
   547                           ;!
   548                           ;!Critical Paths under _main in BANK3
   549                           ;!
   550                           ;!    None.
   551                           ;!
   552                           ;!Critical Paths under _Hi_ISR in BANK3
   553                           ;!
   554                           ;!    None.
   555                           ;!
   556                           ;!Critical Paths under _main in BANK4
   557                           ;!
   558                           ;!    None.
   559                           ;!
   560                           ;!Critical Paths under _Hi_ISR in BANK4
   561                           ;!
   562                           ;!    None.
   563                           ;!
   564                           ;!Critical Paths under _main in BANK5
   565                           ;!
   566                           ;!    None.
   567                           ;!
   568                           ;!Critical Paths under _Hi_ISR in BANK5
   569                           ;!
   570                           ;!    None.
   571                           
   572 ;;
   573 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   574 ;;
   575                           
   576                           ;!
   577                           ;!Call Graph Tables:
   578                           ;!
   579                           ;! ---------------------------------------------------------------------------------
   580                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   581                           ;! ---------------------------------------------------------------------------------
   582                           ;! (0) _main                                                 0     0      0       0
   583                           ;!                           _adc_init
   584                           ;!                          _ccp2_init
   585                           ;!                           _tmr_init
   586                           ;! ---------------------------------------------------------------------------------
   587                           ;! (1) _tmr_init                                             0     0      0       0
   588                           ;! ---------------------------------------------------------------------------------
   589                           ;! (1) _ccp2_init                                            0     0      0       0
   590                           ;! ---------------------------------------------------------------------------------
   591                           ;! (1) _adc_init                                             0     0      0       0
   592                           ;! ---------------------------------------------------------------------------------
   593                           ;! Estimated maximum stack depth 1
   594                           ;! ---------------------------------------------------------------------------------
   595                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   596                           ;! ---------------------------------------------------------------------------------
   597                           ;! (2) _Hi_ISR                                               2     2      0       0
   598                           ;!                                              0 COMRAM     2     2      0
   599                           ;! ---------------------------------------------------------------------------------
   600                           ;! Estimated maximum stack depth 2
   601                           ;! ---------------------------------------------------------------------------------
   602                           ;!
   603                           ;! Call Graph Graphs:
   604                           ;!
   605                           ;! _main (ROOT)
   606                           ;!   _adc_init
   607                           ;!   _ccp2_init
   608                           ;!   _tmr_init
   609                           ;!
   610                           ;! _Hi_ISR (ROOT)
   611                           ;!
   612                           
   613                           ;! Address spaces:
   614                           
   615                           ;!Name               Size   Autos  Total    Cost      Usage
   616                           ;!BIGRAM             5F3      0       0      16        0.0%
   617                           ;!EEDATA             100      0       0       0        0.0%
   618                           ;!BITBANK4           100      0       0      11        0.0%
   619                           ;!BANK4              100      0       0      12        0.0%
   620                           ;!BITBANK3           100      0       0       9        0.0%
   621                           ;!BANK3              100      0       0      10        0.0%
   622                           ;!BITBANK2           100      0       0       7        0.0%
   623                           ;!BANK2              100      0       0       8        0.0%
   624                           ;!BITBANK1           100      0       0       5        0.0%
   625                           ;!BANK1              100      0       0       6        0.0%
   626                           ;!BITBANK5            F4      0       0      15        0.0%
   627                           ;!BANK5               F4      0       0      13        0.0%
   628                           ;!BITBANK0            80      0       0       3        0.0%
   629                           ;!BANK0               80      0       0       4        0.0%
   630                           ;!BITCOMRAM           7E      0       0       0        0.0%
   631                           ;!COMRAM              7E      2      14       1       15.9%
   632                           ;!BITSFR_5             0      0       0     200        0.0%
   633                           ;!SFR_5                0      0       0     200        0.0%
   634                           ;!BITSFR_4             0      0       0     200        0.0%
   635                           ;!SFR_4                0      0       0     200        0.0%
   636                           ;!BITSFR_3             0      0       0     200        0.0%
   637                           ;!SFR_3                0      0       0     200        0.0%
   638                           ;!BITSFR_2             0      0       0     200        0.0%
   639                           ;!SFR_2                0      0       0     200        0.0%
   640                           ;!BITSFR_1             0      0       0     200        0.0%
   641                           ;!SFR_1                0      0       0     200        0.0%
   642                           ;!BITSFR               0      0       0     200        0.0%
   643                           ;!SFR                  0      0       0     200        0.0%
   644                           ;!STACK                0      0       0       2        0.0%
   645                           ;!NULL                 0      0       0       0        0.0%
   646                           ;!ABS                  0      0      14      14        0.0%
   647                           ;!DATA                 0      0      14      17        0.0%
   648                           ;!CODE                 0      0       0       0        0.0%
   649                           
   650                           	global	_main
   651                           
   652 ;; *************** function _main *****************
   653 ;; Defined at:
   654 ;;		line 31 in file "newmain.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   668 ;;      Params:         0       0       0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels required when called:    2
   674 ;; This function calls:
   675 ;;		_adc_init
   676 ;;		_ccp2_init
   677 ;;		_tmr_init
   678 ;; This function is called by:
   679 ;;		Startup code after reset
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           psect	text0,class=CODE,space=0,reloc=2,group=0
   683                           	file	"newmain.c"
   684                           	line	31
   685                           global __ptext0
   686                           __ptext0:
   687  0000DC                     psect	text0
   688                           	file	"newmain.c"
   689                           	line	31
   690                           	global	__size_of_main
   691                           	__size_of_main	equ	__end_of_main-_main
   692  0000                     	
   693                           _main:
   694  0000DC                     ;incstack = 0
   695                           	opt	stack 29
   696                           	line	33
   697                           	
   698                           l807:
   699  0000DC                     ;newmain.c: 33:     while(1);
   700                           	movf	((c:4051)),c,w	;volatile
   701  0000DC  50D3               	andlw	not (((1<<3)-1)<<4)
   702  0000DE  0B8F               	iorlw	(04h & ((1<<3)-1))<<4
   703  0000E0  0940               	movwf	((c:4051)),c	;volatile
   704  0000E2  6ED3               	line	35
   705                           	
   706                           l809:
   707  0000E4                     ;newmain.c: 35: }
   708                           	call	_adc_init	;wreg free
   709  0000E4  EC52  F000         	line	36
   710                           	
   711                           l811:
   712  0000E8                     ;newmain.c: 36: 
   713                           	call	_ccp2_init	;wreg free
   714  0000E8  EC7C  F000         	line	37
   715                           	
   716                           l813:
   717  0000EC                     ;newmain.c: 37: void adc_init(void){
   718                           	call	_tmr_init	;wreg free
   719  0000EC  EC93  F000         	line	38
   720                           ;newmain.c: 38: 
   721                           	
   722                           l63:
   723  0000F0                     	
   724                           l64:
   725  0000F0                     	goto	l63
   726  0000F0  EF78  F000         	
   727                           l65:
   728  0000F4                     	line	40
   729                           ;newmain.c: 39: 
   730                           	
   731                           l66:
   732  0000F4                     	global	start
   733                           	goto	start
   734  0000F4  EF07  F000         	opt stack 0
   735                           GLOBAL	__end_of_main
   736                           	__end_of_main:
   737  0000F8                     	signat	_main,89
   738                           	global	_tmr_init
   739                           
   740 ;; *************** function _tmr_init *****************
   741 ;; Defined at:
   742 ;;		line 85 in file "newmain.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   756 ;;      Params:         0       0       0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0
   759 ;;      Totals:         0       0       0       0       0       0       0
   760 ;;Total ram usage:        0 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    1
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           psect	text1,class=CODE,space=0,reloc=2,group=0
   770                           	line	85
   771                           global __ptext1
   772                           __ptext1:
   773  000126                     psect	text1
   774                           	file	"newmain.c"
   775                           	line	85
   776                           	global	__size_of_tmr_init
   777                           	__size_of_tmr_init	equ	__end_of_tmr_init-_tmr_init
   778  0000                     	
   779                           _tmr_init:
   780  000126                     ;incstack = 0
   781                           	opt	stack 29
   782                           	line	87
   783                           	
   784                           l781:
   785  000126                     ;newmain.c: 87: }
   786                           	bsf	((c:4017)),c,6	;volatile
   787  000126  8CB1               	line	88
   788                           	bsf	((c:4017)),c,7	;volatile
   789  000128  8EB1               	line	89
   790                           	
   791                           l783:
   792  00012A                     	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
   793  00012A  0ECF               	andwf	((c:4017)),c	;volatile
   794  00012C  16B1               	line	90
   795                           	
   796                           l785:
   797  00012E                     	bsf	((c:4017)),c,0	;volatile
   798  00012E  80B1               	line	92
   799                           	
   800                           l75:
   801  000130                     	return	;funcret
   802  000130  0012               	opt stack 0
   803                           GLOBAL	__end_of_tmr_init
   804                           	__end_of_tmr_init:
   805  000132                     	signat	_tmr_init,89
   806                           	global	_ccp2_init
   807                           
   808 ;; *************** function _ccp2_init *****************
   809 ;; Defined at:
   810 ;;		line 73 in file "newmain.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, status,2
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   824 ;;      Params:         0       0       0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0
   827 ;;      Totals:         0       0       0       0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    1
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           psect	text2,class=CODE,space=0,reloc=2,group=0
   838                           	line	73
   839                           global __ptext2
   840                           __ptext2:
   841  0000F8                     psect	text2
   842                           	file	"newmain.c"
   843                           	line	73
   844                           	global	__size_of_ccp2_init
   845                           	__size_of_ccp2_init	equ	__end_of_ccp2_init-_ccp2_init
   846  0000                     	
   847                           _ccp2_init:
   848  0000F8                     ;incstack = 0
   849                           	opt	stack 29
   850                           	line	75
   851                           	
   852                           l773:
   853  0000F8                     ;newmain.c: 75:     IPR2bits.CCP2IP = 1;
   854                           	movf	((c:4026)),c,w	;volatile
   855  0000F8  50BA               	andlw	not (((1<<4)-1)<<0)
   856  0000FA  0BF0               	iorlw	(0Bh & ((1<<4)-1))<<0
   857  0000FC  090B               	movwf	((c:4026)),c	;volatile
   858  0000FE  6EBA               	line	78
   859                           	
   860                           l775:
   861  000100                     ;newmain.c: 78: }
   862                           	bcf	((c:4001)),c,0	;volatile
   863  000100  90A1               	line	79
   864                           	
   865                           l777:
   866  000102                     ;newmain.c: 79: 
   867                           	bsf	((c:4000)),c,0	;volatile
   868  000102  80A0               	line	80
   869                           	
   870                           l779:
   871  000104                     ;newmain.c: 80: void tmr_init(void){
   872                           	bsf	((c:4002)),c,0	;volatile
   873  000104  80A2               	line	82
   874                           ;newmain.c: 82:     T3CONbits.T3CCP2 = 1;
   875                           	movlw	high(07A12h)
   876  000106  0E7A               	movwf	((c:4027+1)),c	;volatile
   877  000108  6EBC               	movlw	low(07A12h)
   878  00010A  0E12               	movwf	((c:4027)),c	;volatile
   879  00010C  6EBB               	line	83
   880                           	
   881                           l72:
   882  00010E                     	return	;funcret
   883  00010E  0012               	opt stack 0
   884                           GLOBAL	__end_of_ccp2_init
   885                           	__end_of_ccp2_init:
   886  000110                     	signat	_ccp2_init,89
   887                           	global	_adc_init
   888                           
   889 ;; *************** function _adc_init *****************
   890 ;; Defined at:
   891 ;;		line 42 in file "newmain.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   905 ;;      Params:         0       0       0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0
   908 ;;      Totals:         0       0       0       0       0       0       0
   909 ;;Total ram usage:        0 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           psect	text3,class=CODE,space=0,reloc=2,group=0
   919                           	line	42
   920                           global __ptext3
   921                           __ptext3:
   922  0000A4                     psect	text3
   923                           	file	"newmain.c"
   924                           	line	42
   925                           	global	__size_of_adc_init
   926                           	__size_of_adc_init	equ	__end_of_adc_init-_adc_init
   927  0000                     	
   928                           _adc_init:
   929  0000A4                     ;incstack = 0
   930                           	opt	stack 29
   931                           	line	46
   932                           	
   933                           l751:
   934  0000A4                     ;newmain.c: 46:     ADCON0bits.GODONE = 1;
   935                           	movf	((c:4034)),c,w	;volatile
   936  0000A4  50C2               	andlw	not (((1<<4)-1)<<2)
   937  0000A6  0BC3               	iorlw	(07h & ((1<<4)-1))<<2
   938  0000A8  091C               	movwf	((c:4034)),c	;volatile
   939  0000AA  6EC2               	line	49
   940                           	
   941                           l753:
   942  0000AC                     ;newmain.c: 49:     ADCON1bits.VCFG = 0;
   943                           	bsf	((c:3990)),c,2	;volatile
   944  0000AC  8496               	line	51
   945                           	
   946                           l755:
   947  0000AE                     ;newmain.c: 51: 
   948                           	bsf	((c:4034)),c,1	;volatile
   949  0000AE  82C2               	line	52
   950                           	
   951                           l757:
   952  0000B0                     ;newmain.c: 52: 
   953                           	bsf	((c:4034)),c,0	;volatile
   954  0000B0  80C2               	line	54
   955                           ;newmain.c: 54: 
   956                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
   957  0000B2  0ECF               	andwf	((c:4033)),c	;volatile
   958  0000B4  16C1               	line	55
   959                           	
   960                           l759:
   961  0000B6                     ;newmain.c: 55:     ADCON2bits.ACQT = 1;
   962                           		
   963                           	bcf	((c:4033)),c, 0+0	;volatile
   964  0000B6  90C1               	bcf	((c:4033)),c, 0+1	;volatile
   965  0000B8  92C1               	bcf	((c:4033)),c, 0+2	;volatile
   966  0000BA  94C1               	bcf	((c:4033)),c, 0+3	;volatile
   967  0000BC  96C1               
   968                           	line	58
   969                           ;newmain.c: 58: 
   970                           	movf	((c:4032)),c,w	;volatile
   971  0000BE  50C0               	andlw	not (((1<<3)-1)<<0)
   972  0000C0  0BF8               	iorlw	(03h & ((1<<3)-1))<<0
   973  0000C2  0903               	movwf	((c:4032)),c	;volatile
   974  0000C4  6EC0               	line	60
   975                           ;newmain.c: 60:     PIE1bits.ADIE = 1;
   976                           	movf	((c:4032)),c,w	;volatile
   977  0000C6  50C0               	andlw	not (((1<<3)-1)<<3)
   978  0000C8  0BC7               	iorlw	(01h & ((1<<3)-1))<<3
   979  0000CA  0908               	movwf	((c:4032)),c	;volatile
   980  0000CC  6EC0               	line	62
   981                           	
   982                           l761:
   983  0000CE                     ;newmain.c: 62: 
   984                           	bsf	((c:4032)),c,7	;volatile
   985  0000CE  8EC0               	line	64
   986                           	
   987                           l763:
   988  0000D0                     ;newmain.c: 64:     RCONbits.IPEN = 1;
   989                           	bcf	((c:3998)),c,6	;volatile
   990  0000D0  9C9E               	line	65
   991                           	
   992                           l765:
   993  0000D2                     ;newmain.c: 65:     INTCONbits.GIE = 1;
   994                           	bsf	((c:3997)),c,6	;volatile
   995  0000D2  8C9D               	line	66
   996                           	
   997                           l767:
   998  0000D4                     ;newmain.c: 66: }
   999                           	bsf	((c:3999)),c,6	;volatile
  1000  0000D4  8C9F               	line	69
  1001                           	
  1002                           l769:
  1003  0000D6                     ;newmain.c: 69: 
  1004                           	bsf	((c:4048)),c,7	;volatile
  1005  0000D6  8ED0               	line	70
  1006                           	
  1007                           l771:
  1008  0000D8                     ;newmain.c: 70:     CCP2CONbits.CCP2M = 11;
  1009                           	bsf	((c:4082)),c,7	;volatile
  1010  0000D8  8EF2               	line	71
  1011                           	
  1012                           l69:
  1013  0000DA                     	return	;funcret
  1014  0000DA  0012               	opt stack 0
  1015                           GLOBAL	__end_of_adc_init
  1016                           	__end_of_adc_init:
  1017  0000DC                     	signat	_adc_init,89
  1018                           	global	_Hi_ISR
  1019                           
  1020 ;; *************** function _Hi_ISR *****************
  1021 ;; Defined at:
  1022 ;;		line 10 in file "newmain.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1036 ;;      Params:         0       0       0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0       0       0
  1038 ;;      Temps:          2       0       0       0       0       0       0
  1039 ;;      Totals:         2       0       0       0       0       0       0
  1040 ;;Total ram usage:        2 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		Interrupt level 2
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           psect	intcode,class=CODE,space=0,reloc=2
  1049                           global __pintcode
  1050                           __pintcode:
  1051  000008                     psect	intcode
  1052                           	file	"newmain.c"
  1053                           	line	10
  1054                           	global	__size_of_Hi_ISR
  1055                           	__size_of_Hi_ISR	equ	__end_of_Hi_ISR-_Hi_ISR
  1056  0000                     	
  1057                           _Hi_ISR:
  1058  000008                     ;incstack = 0
  1059                           	opt	stack 29
  1060                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  1061  000008  8215               	global	int_func
  1062                           	call	int_func,f	;refresh shadow registers
  1063  00000A  ED09  F000         psect	intcode_body,class=CODE,space=0,reloc=2
  1064                           global __pintcode_body
  1065                           __pintcode_body:
  1066  000012                     int_func:
  1067  000012                     
  1068                           	pop	; remove dummy address from shadow register refresh
  1069  000012  0006               	movff	fsr2l+0,??_Hi_ISR+0
  1070  000014  CFD9 F013          	movff	fsr2h+0,??_Hi_ISR+1
  1071  000018  CFDA F014          	line	13
  1072                           	
  1073                           i2l787:
  1074  00001C                     ;newmain.c: 13:     else if(PIR2bits.CCP2IF){
  1075                           	btfss	((c:3998)),c,6	;volatile
  1076  00001C  AC9E               	goto	i2u1_41
  1077  00001E  EF13  F000         	goto	i2u1_40
  1078  000022  EF15  F000         i2u1_41:
  1079  000026                     	goto	i2l53
  1080  000026  EF25  F000         i2u1_40:
  1081  00002A                     	line	14
  1082                           	
  1083                           i2l789:
  1084  00002A                     ;newmain.c: 14:         TMR3 = 0;
  1085                           	bcf	status,0
  1086  00002A  90D8               	rlcf	((c:_count)),c,w	;volatile
  1087  00002C  3411               	movwf	fsr2l
  1088  00002E  6ED9               	rlcf	((c:_count+1)),c,w	;volatile
  1089  000030  3412               	movwf	fsr2h
  1090  000032  6EDA               	movlw	low(_result)
  1091  000034  0E01               	addwf	fsr2l
  1092  000036  26D9               	movlw	high(_result)
  1093  000038  0E00               	addwfc	fsr2h
  1094  00003A  22DA               	movff	(c:4035),postinc2	;volatile
  1095  00003C  CFC3 FFDE          	movff	(c:4035+1),postdec2	;volatile
  1096  000040  CFC4 FFDD          	line	16
  1097                           	
  1098                           i2l791:
  1099  000044                     ;newmain.c: 16:             count = 0;
  1100                           	bcf	((c:3998)),c,6	;volatile
  1101  000044  9C9E               	line	17
  1102                           ;newmain.c: 17:             __nop();
  1103                           	goto	i2l58
  1104  000046  EF4C  F000         	line	18
  1105                           ;newmain.c: 18:         }
  1106                           	
  1107                           i2l53:
  1108  00004A                     	btfss	((c:4001)),c,0	;volatile
  1109  00004A  A0A1               	goto	i2u2_41
  1110  00004C  EF2A  F000         	goto	i2u2_40
  1111  000050  EF2C  F000         i2u2_41:
  1112  000054                     	goto	i2l58
  1113  000054  EF4C  F000         i2u2_40:
  1114  000058                     	line	19
  1115                           	
  1116                           i2l793:
  1117  000058                     ;newmain.c: 19:         else
  1118                           	movlw	high(0)
  1119  000058  0E00               	movwf	((c:4018+1)),c	;volatile
  1120  00005A  6EB3               	movlw	low(0)
  1121  00005C  0E00               	movwf	((c:4018)),c	;volatile
  1122  00005E  6EB2               	line	20
  1123                           	
  1124                           i2l795:
  1125  000060                     ;newmain.c: 20:             ++count;
  1126                           		movlw	7
  1127  000060  0E07               	xorwf	((c:_count)),c,w	;volatile
  1128  000062  1811               iorwf	((c:_count+1)),c,w	;volatile
  1129  000064  1012               	btfss	status,2
  1130  000066  A4D8               	goto	i2u3_41
  1131  000068  EF38  F000         	goto	i2u3_40
  1132  00006C  EF3A  F000         
  1133                           i2u3_41:
  1134  000070                     	goto	i2l801
  1135  000070  EF41  F000         i2u3_40:
  1136  000074                     	line	21
  1137                           	
  1138                           i2l797:
  1139  000074                     ;newmain.c: 21:         PIR2bits.CCP2IF = 0;
  1140                           	movlw	high(0)
  1141  000074  0E00               	movwf	((c:_count+1)),c	;volatile
  1142  000076  6E12               	movlw	low(0)
  1143  000078  0E00               	movwf	((c:_count)),c	;volatile
  1144  00007A  6E11               	line	22
  1145                           	
  1146                           i2l799:
  1147  00007C                     ;newmain.c: 22:     }
  1148                           	opt	asmopt_push
  1149                           	opt	asmopt_off
  1150                           	nop
  1151  00007C  F000               	opt	asmopt_pop
  1152                           	line	23
  1153                           ;newmain.c: 23:     return ;
  1154                           	goto	i2l803
  1155  00007E  EF45  F000         	line	24
  1156                           ;newmain.c: 24: }
  1157                           	
  1158                           i2l56:
  1159  000082                     	line	25
  1160                           	
  1161                           i2l801:
  1162  000082                     ;newmain.c: 25: 
  1163                           	infsnz	((c:_count)),c	;volatile
  1164  000082  4A11               	incf	((c:_count+1)),c	;volatile
  1165  000084  2A12               	goto	i2l803
  1166  000086  EF45  F000         	
  1167                           i2l57:
  1168  00008A                     	line	26
  1169                           	
  1170                           i2l803:
  1171  00008A                     ;newmain.c: 26: void main(void) {
  1172                           	bcf	((c:4001)),c,0	;volatile
  1173  00008A  90A1               	goto	i2l58
  1174  00008C  EF4C  F000         	line	27
  1175                           ;newmain.c: 27: 
  1176                           	
  1177                           i2l55:
  1178  000090                     	goto	i2l58
  1179  000090  EF4C  F000         	
  1180                           i2l54:
  1181  000094                     	goto	i2l58
  1182  000094  EF4C  F000         	line	28
  1183                           	
  1184                           i2l805:
  1185  000098                     	line	29
  1186                           ;newmain.c: 28:     OSCCONbits.IRCF = 4;
  1187                           	
  1188                           i2l58:
  1189  000098                     	movff	??_Hi_ISR+1,fsr2h+0
  1190  000098  C014  FFDA         	movff	??_Hi_ISR+0,fsr2l+0
  1191  00009C  C013  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  1192  0000A0  9215               	retfie f
  1193  0000A2  0011               	opt stack 0
  1194                           GLOBAL	__end_of_Hi_ISR
  1195                           	__end_of_Hi_ISR:
  1196  0000A4                     	signat	_Hi_ISR,89
  1197                           	GLOBAL	__activetblptr
  1198                           __activetblptr	EQU	0
  1199  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  1200                           	PSECT	rparam,class=COMRAM,space=1,noexec
  1201                           	GLOBAL	__Lrparam
  1202                           	FNCONF	rparam,??,?
  1203                           	GLOBAL	___rparam_used
  1204                           	___rparam_used EQU 1
  1205  0000                     	GLOBAL	___param_bank
  1206                           	___param_bank EQU 0
  1207  0000                     GLOBAL	__Lparam, __Hparam
  1208                           GLOBAL	__Lrparam, __Hrparam
  1209                           __Lparam	EQU	__Lrparam
  1210  0000                     __Hparam	EQU	__Hrparam
  1211  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  1212                           	global	btemp
  1213                           btemp:
  1214  000015                     	ds	1
  1215  000015                     	global	int$flags
  1216                           	int$flags	set btemp
  1217  0000                     	global	wtemp8
  1218                           	wtemp8 set btemp+1
  1219  0000                     	global	ttemp5
  1220                           	ttemp5 set btemp+1
  1221  0000                     	global	ttemp6
  1222                           	ttemp6 set btemp+4
  1223  0000                     	global	ttemp7
  1224                           	ttemp7 set btemp+8
  1225  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      2      20
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _adc_init
                          _ccp2_init
                           _tmr_init
 ---------------------------------------------------------------------------------
 (1) _tmr_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ccp2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Hi_ISR                                               2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _ccp2_init
   _tmr_init

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      2      14       1       15.9%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      14        0.0%
DATA                 0      0      14      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Dec 10 19:13:05 2018

                     l63 00F0                       l72 010E                       l64 00F0  
                     l65 00F4                       l66 00F4                       l75 0130  
                     l69 00DA                      l811 00E8                      l813 00EC  
                    l751 00A4                      l807 00DC                      l761 00CE  
                    l753 00AC                      l809 00E4                      l771 00D8  
                    l763 00D0                      l755 00AE                      l765 00D2  
                    l757 00B0                      l773 00F8                      l781 0126  
                    l767 00D4                      l759 00B6                      l775 0100  
                    l783 012A                      l769 00D6                      l777 0102  
                    l785 012E                      l779 0104                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     i2l53 004A  
                   i2l54 0094                     i2l55 0090                     i2l56 0082  
                   i2l57 008A                     i2l58 0098                     _TMR3 000FB2  
                   _main 00DC                     fsr2h 000FDA                     fsr2l 000FD9  
                   btemp 0015                     start 000E             ___param_bank 000000  
                  ?_main 0013                    _ADRES 000FC3                    _CCPR2 000FBB  
                  i2l801 0082                    i2l803 008A                    i2l805 0098  
                  i2l791 0044                    i2l793 0058                    i2l795 0060  
                  i2l787 001C                    i2l797 0074                    i2l789 002A  
                  i2l799 007C                    _count 0011                    ttemp5 0016  
                  ttemp6 0019                    ttemp7 001D                    status 000FD8  
                  wtemp8 0016          __initialization 0110             __end_of_main 00F8  
                 ??_main 0015            __activetblptr 000000         __end_of_adc_init 00DC  
                 i2u1_40 002A                   i2u1_41 0026                   i2u2_40 0058  
                 i2u2_41 0054                   i2u3_40 0074                   i2u3_41 0070  
                 _Hi_ISR 0008                   clear_0 0116                   _result 0001  
       __end_of_tmr_init 0132       __size_of_ccp2_init 0018               __accesstop 0080  
__end_of__initialization 011C            ___rparam_used 000001           __pcstackCOMRAM 0013  
                ?_Hi_ISR 0013        __end_of_ccp2_init 0110                ?_adc_init 0013  
        __size_of_Hi_ISR 009C                  __Hparam 0000                  __Lparam 0000  
              ?_tmr_init 0013                  __pcinit 0110                  __ramtop 0600  
             ??_adc_init 0015                  __ptext0 00DC                  __ptext1 0126  
                __ptext2 00F8                  __ptext3 00A4                _T3CONbits 000FB1  
         __pintcode_body 0012     end_of_initialization 011C                  int_func 0012  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
             ??_tmr_init 0015                _TRISEbits 000F96              _CCP2CONbits 000FBA  
         __end_of_Hi_ISR 00A4      start_initialization 0110         __CFG_OSC$INTIO67 000000  
               ??_Hi_ISR 0013        __size_of_adc_init 0038              __pbssCOMRAM 0001  
              _ccp2_init 00F8                __pintcode 0008        __size_of_tmr_init 000C  
             ?_ccp2_init 0013                 _IPR1bits 000F9F                 _IPR2bits 000FA2  
               _PIE1bits 000F9D                 _PIE2bits 000FA0                 _PIR1bits 000F9E  
               _PIR2bits 000FA1                 _RCONbits 000FD0               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0                 __Hrparam 0000  
               __Lrparam 0000                 _adc_init 00A4              ??_ccp2_init 0015  
          __size_of_main 001C                 int$flags 0015                 _tmr_init 0126  
             _INTCONbits 000FF2                 intlevel2 0000               _OSCCONbits 000FD3  
